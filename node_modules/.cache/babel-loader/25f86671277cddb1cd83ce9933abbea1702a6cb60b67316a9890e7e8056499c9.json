{"ast":null,"code":"import bases from './util/bases.js';\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`);\n  }\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}","map":{"version":3,"names":["bases","fromString","string","encoding","base","Error","decoder","decode","prefix"],"sources":["C:\\Users\\yassi\\OneDrive\\Desktop\\tp_9\\Certification-de-Diplomes\\node_modules\\@multiformats\\multiaddr-to-uri\\node_modules\\uint8arrays\\src\\from-string.ts"],"sourcesContent":["import bases, { type SupportedEncodings } from './util/bases.js'\n\nexport type { SupportedEncodings }\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n */\nexport function fromString (string: string, encoding: SupportedEncodings = 'utf8'): Uint8Array {\n  const base = bases[encoding]\n\n  if (base == null) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`) // eslint-disable-line @typescript-eslint/restrict-template-expressions\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAmC,iBAAiB;AAIhE;;;;;;;AAOA,OAAM,SAAUC,UAAUA,CAAEC,MAAc,EAAEC,QAAA,GAA+B,MAAM;EAC/E,MAAMC,IAAI,GAAGJ,KAAK,CAACG,QAAQ,CAAC;EAE5B,IAAIC,IAAI,IAAI,IAAI,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyBF,QAAQ,GAAG,CAAC;EACvD;EAEA;EACA,OAAOC,IAAI,CAACE,OAAO,CAACC,MAAM,CAAC,GAAGH,IAAI,CAACI,MAAM,GAAGN,MAAM,EAAE,CAAC,EAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}