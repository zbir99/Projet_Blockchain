{"ast":null,"code":"export const empty = new Uint8Array(0);\nexport function toHex(d) {\n  return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nexport function fromHex(hex) {\n  const hexes = hex.match(/../g);\n  return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nexport function equals(aa, bb) {\n  if (aa === bb) {\n    return true;\n  }\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function coerce(o) {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') {\n    return o;\n  }\n  if (o instanceof ArrayBuffer) {\n    return new Uint8Array(o);\n  }\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function isBinary(o) {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nexport function fromString(str) {\n  return new TextEncoder().encode(str);\n}\nexport function toString(b) {\n  return new TextDecoder().decode(b);\n}","map":{"version":3,"names":["empty","Uint8Array","toHex","d","reduce","hex","byte","toString","padStart","fromHex","hexes","match","map","b","parseInt","equals","aa","bb","byteLength","ii","coerce","o","constructor","name","ArrayBuffer","isView","buffer","byteOffset","Error","isBinary","fromString","str","TextEncoder","encode","TextDecoder","decode"],"sources":["C:\\Users\\yassi\\OneDrive\\Desktop\\tp_9\\Certification-de-Diplomes\\node_modules\\@ipld\\dag-pb\\node_modules\\multiformats\\src\\bytes.ts"],"sourcesContent":["export const empty = new Uint8Array(0)\n\nexport function toHex (d: Uint8Array): string {\n  return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n}\n\nexport function fromHex (hex: string): Uint8Array {\n  const hexes = hex.match(/../g)\n  return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\nexport function equals (aa: Uint8Array, bb: Uint8Array): boolean {\n  if (aa === bb) { return true }\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function coerce (o: ArrayBufferView | ArrayBuffer | Uint8Array): Uint8Array {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') { return o }\n  if (o instanceof ArrayBuffer) { return new Uint8Array(o) }\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\nexport function isBinary (o: unknown): o is ArrayBuffer | ArrayBufferView {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n}\n\nexport function fromString (str: string): Uint8Array {\n  return new TextEncoder().encode(str)\n}\n\nexport function toString (b: Uint8Array): string {\n  return new TextDecoder().decode(b)\n}\n"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,IAAIC,UAAU,CAAC,CAAC,CAAC;AAEtC,OAAM,SAAUC,KAAKA,CAAEC,CAAa;EAClC,OAAOA,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC;AAC9E;AAEA,OAAM,SAAUC,OAAOA,CAAEJ,GAAW;EAClC,MAAMK,KAAK,GAAGL,GAAG,CAACM,KAAK,CAAC,KAAK,CAAC;EAC9B,OAAOD,KAAK,IAAI,IAAI,GAAG,IAAIT,UAAU,CAACS,KAAK,CAACE,GAAG,CAACC,CAAC,IAAIC,QAAQ,CAACD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAGb,KAAK;AAChF;AAEA,OAAM,SAAUe,MAAMA,CAAEC,EAAc,EAAEC,EAAc;EACpD,IAAID,EAAE,KAAKC,EAAE,EAAE;IAAE,OAAO,IAAI;EAAC;EAC7B,IAAID,EAAE,CAACE,UAAU,KAAKD,EAAE,CAACC,UAAU,EAAE;IACnC,OAAO,KAAK;EACd;EAEA,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGH,EAAE,CAACE,UAAU,EAAEC,EAAE,EAAE,EAAE;IACzC,IAAIH,EAAE,CAACG,EAAE,CAAC,KAAKF,EAAE,CAACE,EAAE,CAAC,EAAE;MACrB,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb;AAEA,OAAM,SAAUC,MAAMA,CAAEC,CAA6C;EACnE,IAAIA,CAAC,YAAYpB,UAAU,IAAIoB,CAAC,CAACC,WAAW,CAACC,IAAI,KAAK,YAAY,EAAE;IAAE,OAAOF,CAAC;EAAC;EAC/E,IAAIA,CAAC,YAAYG,WAAW,EAAE;IAAE,OAAO,IAAIvB,UAAU,CAACoB,CAAC,CAAC;EAAC;EACzD,IAAIG,WAAW,CAACC,MAAM,CAACJ,CAAC,CAAC,EAAE;IACzB,OAAO,IAAIpB,UAAU,CAACoB,CAAC,CAACK,MAAM,EAAEL,CAAC,CAACM,UAAU,EAAEN,CAAC,CAACH,UAAU,CAAC;EAC7D;EACA,MAAM,IAAIU,KAAK,CAAC,mCAAmC,CAAC;AACtD;AAEA,OAAM,SAAUC,QAAQA,CAAER,CAAU;EAClC,OAAOA,CAAC,YAAYG,WAAW,IAAIA,WAAW,CAACC,MAAM,CAACJ,CAAC,CAAC;AAC1D;AAEA,OAAM,SAAUS,UAAUA,CAAEC,GAAW;EACrC,OAAO,IAAIC,WAAW,EAAE,CAACC,MAAM,CAACF,GAAG,CAAC;AACtC;AAEA,OAAM,SAAUxB,QAAQA,CAAEM,CAAa;EACrC,OAAO,IAAIqB,WAAW,EAAE,CAACC,MAAM,CAACtB,CAAC,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}