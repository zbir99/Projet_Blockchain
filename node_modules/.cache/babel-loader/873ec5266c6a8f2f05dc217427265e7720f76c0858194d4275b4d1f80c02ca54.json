{"ast":null,"code":"export default function peekableIterator(iterable) {\n  // @ts-expect-error\n  const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n  // @ts-expect-error\n  ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n  // @ts-expect-error\n  : [iterable[Symbol.iterator](), Symbol.iterator];\n  const queue = [];\n  // @ts-expect-error\n  return {\n    peek: () => {\n      return iterator.next();\n    },\n    push: value => {\n      queue.push(value);\n    },\n    next: () => {\n      if (queue.length > 0) {\n        return {\n          done: false,\n          value: queue.shift()\n        };\n      }\n      return iterator.next();\n    },\n    [symbol]() {\n      return this;\n    }\n  };\n}","map":{"version":3,"names":["peekableIterator","iterable","iterator","symbol","Symbol","asyncIterator","queue","peek","next","push","value","length","done","shift"],"sources":["C:\\Users\\yassi\\OneDrive\\Desktop\\tp_9\\Certification-de-Diplomes\\node_modules\\it-peekable\\src\\index.ts"],"sourcesContent":["\ninterface Peek <T> {\n  peek: () => IteratorResult<T, undefined>\n}\n\ninterface AsyncPeek <T> {\n  peek: () => Promise<IteratorResult<T, undefined>>\n}\n\ninterface Push <T> {\n  push: (value: T) => void\n}\n\ntype Peekable <T> = Iterable<T> & Peek<T> & Push<T> & Iterator<T>\n\ntype AsyncPeekable <T> = AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>\n\nexport default function peekableIterator <I = Iterable<any> | AsyncIterable<any>> (iterable: I): I extends Iterable<infer T>\n  ? Peekable<T>\n  : I extends AsyncIterable<infer T>\n    ? AsyncPeekable<T>\n    : never {\n  // @ts-expect-error\n  const [iterator, symbol] = iterable[Symbol.asyncIterator] != null\n    // @ts-expect-error\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-expect-error\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  const queue: any[] = []\n\n  // @ts-expect-error\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value: any) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length > 0) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n"],"mappings":"AAiBA,eAAc,SAAUA,gBAAgBA,CAA2CC,QAAW;EAK5F;EACA,MAAM,CAACC,QAAQ,EAAEC,MAAM,CAAC,GAAGF,QAAQ,CAACG,MAAM,CAACC,aAAa,CAAC,IAAI;EAC3D;EAAA,EACE,CAACJ,QAAQ,CAACG,MAAM,CAACC,aAAa,CAAC,EAAE,EAAED,MAAM,CAACC,aAAa;EACzD;EAAA,EACE,CAACJ,QAAQ,CAACG,MAAM,CAACF,QAAQ,CAAC,EAAE,EAAEE,MAAM,CAACF,QAAQ,CAAC;EAElD,MAAMI,KAAK,GAAU,EAAE;EAEvB;EACA,OAAO;IACLC,IAAI,EAAEA,CAAA,KAAK;MACT,OAAOL,QAAQ,CAACM,IAAI,EAAE;IACxB,CAAC;IACDC,IAAI,EAAGC,KAAU,IAAI;MACnBJ,KAAK,CAACG,IAAI,CAACC,KAAK,CAAC;IACnB,CAAC;IACDF,IAAI,EAAEA,CAAA,KAAK;MACT,IAAIF,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE;QACpB,OAAO;UACLC,IAAI,EAAE,KAAK;UACXF,KAAK,EAAEJ,KAAK,CAACO,KAAK;SACnB;;MAGH,OAAOX,QAAQ,CAACM,IAAI,EAAE;IACxB,CAAC;IACD,CAACL,MAAM,IAAC;MACN,OAAO,IAAI;IACb;GACD;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}