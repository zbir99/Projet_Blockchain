{"ast":null,"code":"/* global crypto */\nimport { from } from './hasher.js';\nfunction sha(name) {\n  return async data => new Uint8Array(await crypto.subtle.digest(name, data));\n}\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n});","map":{"version":3,"names":["from","sha","name","data","Uint8Array","crypto","subtle","digest","sha256","code","encode","sha512"],"sources":["C:\\Users\\yassi\\OneDrive\\Desktop\\tp_9\\Certification-de-Diplomes\\node_modules\\@multiformats\\multiaddr-to-uri\\node_modules\\multiformats\\src\\hashes\\sha2-browser.ts"],"sourcesContent":["/* global crypto */\n\nimport { from } from './hasher.js'\n\nfunction sha (name: AlgorithmIdentifier): (data: Uint8Array) => Promise<Uint8Array> {\n  return async data => new Uint8Array(await crypto.subtle.digest(name, data))\n}\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n"],"mappings":"AAAA;AAEA,SAASA,IAAI,QAAQ,aAAa;AAElC,SAASC,GAAGA,CAAEC,IAAyB;EACrC,OAAO,MAAMC,IAAI,IAAI,IAAIC,UAAU,CAAC,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACL,IAAI,EAAEC,IAAI,CAAC,CAAC;AAC7E;AAEA,OAAO,MAAMK,MAAM,GAAGR,IAAI,CAAC;EACzBE,IAAI,EAAE,UAAU;EAChBO,IAAI,EAAE,IAAI;EACVC,MAAM,EAAET,GAAG,CAAC,SAAS;CACtB,CAAC;AAEF,OAAO,MAAMU,MAAM,GAAGX,IAAI,CAAC;EACzBE,IAAI,EAAE,UAAU;EAChBO,IAAI,EAAE,IAAI;EACVC,MAAM,EAAET,GAAG,CAAC,SAAS;CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}