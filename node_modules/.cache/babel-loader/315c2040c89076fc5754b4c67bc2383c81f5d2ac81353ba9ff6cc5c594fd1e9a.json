{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yassi\\\\OneDrive\\\\Desktop\\\\tp_9\\\\Certification-de-Diplomes\\\\src\\\\components\\\\WalletConnect.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from '../utils/contract';\n\n// L'adresse de l'administrateur (celle qui a déployé le contrat)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADMIN_ADDRESS = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\n\n/**\n * Composant pour la connexion au portefeuille MetaMask\n * @param {Object} props - Les propriétés du composant\n * @param {Function} props.onConnect - Fonction appelée lorsque le portefeuille est connecté\n */\nconst WalletConnect = ({\n  onConnect\n}) => {\n  _s();\n  const [account, setAccount] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [error, setError] = useState('');\n\n  // Vérifier si MetaMask est installé et se connecter au changement de compte\n  useEffect(() => {\n    const checkMetaMask = async () => {\n      try {\n        // Vérifier si window.ethereum existe (MetaMask ou autre portefeuille compatible)\n        if (window.ethereum) {\n          // Créer un fournisseur ethers avec window.ethereum\n          const ethersProvider = new ethers.BrowserProvider(window.ethereum);\n          setProvider(ethersProvider);\n\n          // Écouter les changements de compte\n          window.ethereum.on('accountsChanged', handleAccountsChanged);\n\n          // Vérifier si déjà connecté\n          const accounts = await ethersProvider.listAccounts();\n          if (accounts.length > 0) {\n            handleAccountsChanged(accounts);\n          }\n        } else {\n          setError('Veuillez installer MetaMask pour utiliser cette application');\n        }\n      } catch (err) {\n        console.error('Erreur lors de la vérification de MetaMask:', err);\n        setError('Erreur lors de la connexion à MetaMask');\n      }\n    };\n    checkMetaMask();\n\n    // Nettoyer les écouteurs d'événements\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  // Vérifier si le compte est un administrateur\n  const checkIfAdmin = async account => {\n    try {\n      if (account) {\n        // Comparer directement l'adresse du compte avec l'adresse de l'administrateur (insensible à la casse)\n        const isAdmin = account.toLowerCase() === ADMIN_ADDRESS.toLowerCase();\n        console.log('Vérification du statut admin - Compte:', account, 'Est admin:', isAdmin);\n        setIsAdmin(isAdmin);\n        return isAdmin;\n      }\n      return false;\n    } catch (err) {\n      console.error('Erreur lors de la vérification du statut d\\'administrateur:', err);\n      return false;\n    }\n  };\n\n  // Gérer le changement de compte\n  const handleAccountsChanged = async accounts => {\n    console.log('Changement de compte détecté:', accounts);\n    if (accounts.length === 0) {\n      // Déconnexion détectée\n      setAccount('');\n      setIsAdmin(false);\n      setError('Veuillez vous connecter à MetaMask');\n\n      // Réinitialiser l'état global\n      if (onConnect) {\n        onConnect(null, null);\n      }\n    } else {\n      // Normaliser le format du compte (certaines versions de MetaMask renvoient un objet, d'autres une chaîne)\n      const currentAccount = typeof accounts[0] === 'object' && accounts[0].address ? accounts[0].address : accounts[0];\n      console.log('Compte actuel:', currentAccount);\n\n      // Mettre à jour l'état local\n      setAccount(currentAccount);\n      setError('');\n\n      // Recréer le provider pour s'assurer qu'il est à jour avec le compte actuel\n      try {\n        const ethersProvider = new ethers.BrowserProvider(window.ethereum);\n        setProvider(ethersProvider);\n\n        // Vérifier si le compte est un administrateur\n        await checkIfAdmin(currentAccount);\n\n        // Appeler la fonction de callback avec le compte et le fournisseur\n        if (onConnect) {\n          onConnect(currentAccount, ethersProvider);\n        }\n      } catch (err) {\n        console.error('Erreur lors de la mise à jour du provider:', err);\n        setError('Erreur lors du changement de compte');\n      }\n    }\n  };\n\n  // Fonction pour se connecter à MetaMask\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        setError('Veuillez installer MetaMask pour utiliser cette application');\n        return;\n      }\n      setError('');\n\n      // Réinitialiser le provider pour s'assurer d'avoir une connexion propre\n      const ethersProvider = new ethers.BrowserProvider(window.ethereum);\n      setProvider(ethersProvider);\n\n      // Demander l'accès aux comptes\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log('Comptes obtenus lors de la connexion:', accounts);\n\n      // Gérer le changement de compte\n      if (accounts && accounts.length > 0) {\n        handleAccountsChanged(accounts);\n      } else {\n        setError('Aucun compte disponible dans MetaMask');\n      }\n    } catch (err) {\n      console.error('Erreur lors de la connexion au portefeuille:', err);\n      if (err.code === 4001) {\n        // L'utilisateur a refusé la connexion\n        setError(\"Connexion refusée par l'utilisateur\");\n      } else {\n        setError('Erreur lors de la connexion au portefeuille');\n      }\n    }\n  };\n\n  // Fonction pour se déconnecter\n  const disconnectWallet = () => {\n    setAccount('');\n    setIsAdmin(false);\n\n    // Réinitialiser l'état global\n    if (onConnect) {\n      onConnect(null, null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded-lg shadow-sm border border-gray-100\",\n    children: !account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        className: \"btn btn-primary flex items-center justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 100-2 1 1 0 000 2z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), \"Connecter avec MetaMask\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-sm bg-red-50 p-3 rounded-md w-full text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row items-center justify-between gap-3 p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 bg-gradient-to-r from-purple-400 to-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold\",\n          children: account.substring(2, 4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 font-medium text-sm\",\n            children: \"Compte connect\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 text-xs font-mono\",\n            children: [account.substring(0, 6), \"...\", account.substring(account.length - 4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 px-3 py-1 bg-blue-100 text-blue-800 text-xs font-semibold rounded-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-4 w-4\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Administrateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"MMAkEqSKek5bhkG3gRqgzNSbfT4=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","useEffect","ethers","CONTRACT_ADDRESS","CONTRACT_ABI","jsxDEV","_jsxDEV","ADMIN_ADDRESS","WalletConnect","onConnect","_s","account","setAccount","isAdmin","setIsAdmin","provider","setProvider","error","setError","checkMetaMask","window","ethereum","ethersProvider","BrowserProvider","on","handleAccountsChanged","accounts","listAccounts","length","err","console","removeListener","checkIfAdmin","toLowerCase","log","currentAccount","address","connectWallet","request","method","code","disconnectWallet","className","children","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","substring","stroke","strokeLinecap","strokeLinejoin","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/yassi/OneDrive/Desktop/tp_9/Certification-de-Diplomes/src/components/WalletConnect.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from '../utils/contract';\n\n// L'adresse de l'administrateur (celle qui a déployé le contrat)\nconst ADMIN_ADDRESS = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\n\n/**\n * Composant pour la connexion au portefeuille MetaMask\n * @param {Object} props - Les propriétés du composant\n * @param {Function} props.onConnect - Fonction appelée lorsque le portefeuille est connecté\n */\nconst WalletConnect = ({ onConnect }) => {\n  const [account, setAccount] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [provider, setProvider] = useState(null);\n  const [error, setError] = useState('');\n\n  // Vérifier si MetaMask est installé et se connecter au changement de compte\n  useEffect(() => {\n    const checkMetaMask = async () => {\n      try {\n        // Vérifier si window.ethereum existe (MetaMask ou autre portefeuille compatible)\n        if (window.ethereum) {\n          // Créer un fournisseur ethers avec window.ethereum\n          const ethersProvider = new ethers.BrowserProvider(window.ethereum);\n          setProvider(ethersProvider);\n\n          // Écouter les changements de compte\n          window.ethereum.on('accountsChanged', handleAccountsChanged);\n          \n          // Vérifier si déjà connecté\n          const accounts = await ethersProvider.listAccounts();\n          if (accounts.length > 0) {\n            handleAccountsChanged(accounts);\n          }\n        } else {\n          setError('Veuillez installer MetaMask pour utiliser cette application');\n        }\n      } catch (err) {\n        console.error('Erreur lors de la vérification de MetaMask:', err);\n        setError('Erreur lors de la connexion à MetaMask');\n      }\n    };\n\n    checkMetaMask();\n\n    // Nettoyer les écouteurs d'événements\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  // Vérifier si le compte est un administrateur\n  const checkIfAdmin = async (account) => {\n    try {\n      if (account) {\n        // Comparer directement l'adresse du compte avec l'adresse de l'administrateur (insensible à la casse)\n        const isAdmin = account.toLowerCase() === ADMIN_ADDRESS.toLowerCase();\n        console.log('Vérification du statut admin - Compte:', account, 'Est admin:', isAdmin);\n        setIsAdmin(isAdmin);\n        return isAdmin;\n      }\n      return false;\n    } catch (err) {\n      console.error('Erreur lors de la vérification du statut d\\'administrateur:', err);\n      return false;\n    }\n  };\n\n  // Gérer le changement de compte\n  const handleAccountsChanged = async (accounts) => {\n    console.log('Changement de compte détecté:', accounts);\n    \n    if (accounts.length === 0) {\n      // Déconnexion détectée\n      setAccount('');\n      setIsAdmin(false);\n      setError('Veuillez vous connecter à MetaMask');\n      \n      // Réinitialiser l'état global\n      if (onConnect) {\n        onConnect(null, null);\n      }\n    } else {\n      // Normaliser le format du compte (certaines versions de MetaMask renvoient un objet, d'autres une chaîne)\n      const currentAccount = typeof accounts[0] === 'object' && accounts[0].address \n        ? accounts[0].address \n        : accounts[0];\n      \n      console.log('Compte actuel:', currentAccount);\n      \n      // Mettre à jour l'état local\n      setAccount(currentAccount);\n      setError('');\n      \n      // Recréer le provider pour s'assurer qu'il est à jour avec le compte actuel\n      try {\n        const ethersProvider = new ethers.BrowserProvider(window.ethereum);\n        setProvider(ethersProvider);\n        \n        // Vérifier si le compte est un administrateur\n        await checkIfAdmin(currentAccount);\n        \n        // Appeler la fonction de callback avec le compte et le fournisseur\n        if (onConnect) {\n          onConnect(currentAccount, ethersProvider);\n        }\n      } catch (err) {\n        console.error('Erreur lors de la mise à jour du provider:', err);\n        setError('Erreur lors du changement de compte');\n      }\n    }\n  };\n\n  // Fonction pour se connecter à MetaMask\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        setError('Veuillez installer MetaMask pour utiliser cette application');\n        return;\n      }\n\n      setError('');\n      \n      // Réinitialiser le provider pour s'assurer d'avoir une connexion propre\n      const ethersProvider = new ethers.BrowserProvider(window.ethereum);\n      setProvider(ethersProvider);\n      \n      // Demander l'accès aux comptes\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      console.log('Comptes obtenus lors de la connexion:', accounts);\n      \n      // Gérer le changement de compte\n      if (accounts && accounts.length > 0) {\n        handleAccountsChanged(accounts);\n      } else {\n        setError('Aucun compte disponible dans MetaMask');\n      }\n    } catch (err) {\n      console.error('Erreur lors de la connexion au portefeuille:', err);\n      if (err.code === 4001) {\n        // L'utilisateur a refusé la connexion\n        setError(\"Connexion refusée par l'utilisateur\");\n      } else {\n        setError('Erreur lors de la connexion au portefeuille');\n      }\n    }\n  };\n  \n  // Fonction pour se déconnecter\n  const disconnectWallet = () => {\n    setAccount('');\n    setIsAdmin(false);\n    \n    // Réinitialiser l'état global\n    if (onConnect) {\n      onConnect(null, null);\n    }\n  };\n\n  return (\n    <div className=\"p-4 bg-white rounded-lg shadow-sm border border-gray-100\">\n      {!account ? (\n        <div className=\"flex flex-col items-center space-y-4\">\n          <button \n            onClick={connectWallet} \n            className=\"btn btn-primary flex items-center justify-center gap-2\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M17.778 8.222c-4.296-4.296-11.26-4.296-15.556 0A1 1 0 01.808 6.808c5.076-5.077 13.308-5.077 18.384 0a1 1 0 01-1.414 1.414zM14.95 11.05a7 7 0 00-9.9 0 1 1 0 01-1.414-1.414 9 9 0 0112.728 0 1 1 0 01-1.414 1.414zM12.12 13.88a3 3 0 00-4.242 0 1 1 0 01-1.415-1.415 5 5 0 017.072 0 1 1 0 01-1.415 1.415zM9 16a1 1 0 100-2 1 1 0 000 2z\" clipRule=\"evenodd\" />\n            </svg>\n            Connecter avec MetaMask\n          </button>\n          {error && (\n            <p className=\"text-red-600 text-sm bg-red-50 p-3 rounded-md w-full text-center\">\n              {error}\n            </p>\n          )}\n        </div>\n      ) : (\n        <div className=\"flex flex-col sm:flex-row items-center justify-between gap-3 p-2\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-r from-purple-400 to-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold\">\n              {account.substring(2, 4)}\n            </div>\n            <div>\n              <p className=\"text-gray-700 font-medium text-sm\">Compte connecté</p>\n              <p className=\"text-gray-500 text-xs font-mono\">\n                {account.substring(0, 6)}...{account.substring(account.length - 4)}\n              </p>\n            </div>\n          </div>\n          {isAdmin && (\n            <div className=\"flex items-center gap-2 px-3 py-1 bg-blue-100 text-blue-800 text-xs font-semibold rounded-full\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n              </svg>\n              <span>Administrateur</span>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WalletConnect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}