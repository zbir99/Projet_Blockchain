{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yassi\\\\OneDrive\\\\Desktop\\\\tp_9\\\\Certification-de-Diplomes\\\\src\\\\components\\\\AddCertificate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from '../utils/contract';\nimport { uploadToIPFS } from '../utils/ipfs';\n\n/**\n * Composant pour ajouter un nouveau certificat de diplôme\n * @param {Object} props - Les propriétés du composant\n * @param {string} props.account - L'adresse du compte connecté\n * @param {Object} props.provider - Le fournisseur ethers.js\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCertificate = ({\n  account,\n  provider\n}) => {\n  _s();\n  const [studentName, setStudentName] = useState('');\n  const [specialization, setSpecialization] = useState('');\n  const [graduationDate, setGraduationDate] = useState('');\n  const [studentAddress, setStudentAddress] = useState('');\n  const [file, setFile] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [contract, setContract] = useState(null);\n\n  // Initialiser le contrat et vérifier si l'utilisateur est administrateur\n  useEffect(() => {\n    const initContract = async () => {\n      if (provider && account) {\n        try {\n          const signer = await provider.getSigner();\n          const diplomaContract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n          setContract(diplomaContract);\n\n          // Vérifier si l'utilisateur est administrateur\n          const adminStatus = await diplomaContract.isAdmin();\n          setIsAdmin(adminStatus);\n        } catch (err) {\n          console.error('Erreur lors de l\\'initialisation du contrat:', err);\n          setError('Erreur lors de la connexion au contrat intelligent');\n        }\n      }\n    };\n    initContract();\n  }, [provider, account]);\n\n  // Gérer le changement de fichier\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Vérifier le type de fichier (PDF ou image)\n      if (selectedFile.type.startsWith('application/pdf') || selectedFile.type.startsWith('image/')) {\n        setFile(selectedFile);\n        setError('');\n      } else {\n        setFile(null);\n        setError('Veuillez sélectionner un fichier PDF ou une image');\n      }\n    }\n  };\n\n  // Soumettre le formulaire pour ajouter un certificat\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Réinitialiser les messages\n    setError('');\n    setSuccess('');\n\n    // Vérifier que tous les champs sont remplis\n    if (!studentName || !specialization || !graduationDate || !studentAddress || !file) {\n      setError('Veuillez remplir tous les champs et sélectionner un fichier');\n      return;\n    }\n\n    // Vérifier que l'adresse Ethereum est valide\n    if (!ethers.isAddress(studentAddress)) {\n      setError('Adresse Ethereum invalide');\n      return;\n    }\n\n    // Vérifier que l'utilisateur est administrateur\n    if (!isAdmin) {\n      setError('Vous devez être administrateur pour ajouter un certificat');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      // Convertir la date en timestamp Unix\n      const dateTimestamp = Math.floor(new Date(graduationDate).getTime() / 1000);\n\n      // Télécharger le fichier sur IPFS\n      const ipfsHash = await uploadToIPFS(file);\n      console.log('Fichier téléchargé sur IPFS avec le hash:', ipfsHash);\n\n      // Ajouter le certificat au contrat\n      const tx = await contract.addCertificate(studentAddress, studentName, specialization, dateTimestamp, ipfsHash);\n\n      // Attendre la confirmation de la transaction\n      await tx.wait();\n\n      // Réinitialiser le formulaire\n      setStudentName('');\n      setSpecialization('');\n      setGraduationDate('');\n      setStudentAddress('');\n      setFile(null);\n      setSuccess('Certificat ajouté avec succès !');\n    } catch (err) {\n      console.error('Erreur lors de l\\'ajout du certificat:', err);\n      setError('Erreur lors de l\\'ajout du certificat: ' + (err.message || err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Si l'utilisateur n'est pas connecté, afficher un message\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card max-w-2xl mx-auto my-8 bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-4\",\n          children: \"Ajouter un Certificat de Dipl\\xF4me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-16 h-16 bg-blue-50 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-8 w-8 text-primary\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-6\",\n          children: \"Veuillez vous connecter avec MetaMask pour ajouter un certificat.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          disabled: true,\n          children: \"Connectez-vous d'abord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si l'utilisateur n'est pas administrateur, afficher un message\n  if (account && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card max-w-2xl mx-auto my-8 bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-4\",\n          children: \"Ajouter un Certificat de Dipl\\xF4me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-16 h-16 bg-red-50 rounded-full flex items-center justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-8 w-8 text-red-500\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-2\",\n          children: \"Acc\\xE8s restreint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-sm mb-6\",\n          children: \"Seul l'administrateur peut ajouter des certificats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-certificate\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ajouter un Certificat de Dipl\\xF4me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"studentName\",\n          children: \"Nom de l'\\xE9tudiant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"studentName\",\n          value: studentName,\n          onChange: e => setStudentName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"specialization\",\n          children: \"Sp\\xE9cialit\\xE9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"specialization\",\n          value: specialization,\n          onChange: e => setSpecialization(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"graduationDate\",\n          children: \"Date d'obtention:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"graduationDate\",\n          value: graduationDate,\n          onChange: e => setGraduationDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"studentAddress\",\n          children: \"Adresse Ethereum de l'\\xE9tudiant:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"studentAddress\",\n          value: studentAddress,\n          onChange: e => setStudentAddress(e.target.value),\n          placeholder: \"0x...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"certificateFile\",\n          children: \"Fichier du dipl\\xF4me (PDF ou image):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"certificateFile\",\n          onChange: handleFileChange,\n          accept: \".pdf,image/*\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"submit-button\",\n        children: isLoading ? 'Traitement en cours...' : 'Ajouter le Certificat'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCertificate, \"i+RjNnoVlW917HMDZ2AsH+JxVfk=\");\n_c = AddCertificate;\nexport default AddCertificate;\nvar _c;\n$RefreshReg$(_c, \"AddCertificate\");","map":{"version":3,"names":["React","useState","useEffect","ethers","CONTRACT_ADDRESS","CONTRACT_ABI","uploadToIPFS","jsxDEV","_jsxDEV","AddCertificate","account","provider","_s","studentName","setStudentName","specialization","setSpecialization","graduationDate","setGraduationDate","studentAddress","setStudentAddress","file","setFile","isAdmin","setIsAdmin","isLoading","setIsLoading","error","setError","success","setSuccess","contract","setContract","initContract","signer","getSigner","diplomaContract","Contract","adminStatus","err","console","handleFileChange","e","selectedFile","target","files","type","startsWith","handleSubmit","preventDefault","isAddress","dateTimestamp","Math","floor","Date","getTime","ipfsHash","log","tx","addCertificate","wait","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","disabled","onSubmit","htmlFor","id","value","onChange","required","placeholder","accept","_c","$RefreshReg$"],"sources":["C:/Users/yassi/OneDrive/Desktop/tp_9/Certification-de-Diplomes/src/components/AddCertificate.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { CONTRACT_ADDRESS, CONTRACT_ABI } from '../utils/contract';\nimport { uploadToIPFS } from '../utils/ipfs';\n\n/**\n * Composant pour ajouter un nouveau certificat de diplôme\n * @param {Object} props - Les propriétés du composant\n * @param {string} props.account - L'adresse du compte connecté\n * @param {Object} props.provider - Le fournisseur ethers.js\n */\nconst AddCertificate = ({ account, provider }) => {\n  const [studentName, setStudentName] = useState('');\n  const [specialization, setSpecialization] = useState('');\n  const [graduationDate, setGraduationDate] = useState('');\n  const [studentAddress, setStudentAddress] = useState('');\n  const [file, setFile] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [contract, setContract] = useState(null);\n\n  // Initialiser le contrat et vérifier si l'utilisateur est administrateur\n  useEffect(() => {\n    const initContract = async () => {\n      if (provider && account) {\n        try {\n          const signer = await provider.getSigner();\n          const diplomaContract = new ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n          setContract(diplomaContract);\n          \n          // Vérifier si l'utilisateur est administrateur\n          const adminStatus = await diplomaContract.isAdmin();\n          setIsAdmin(adminStatus);\n        } catch (err) {\n          console.error('Erreur lors de l\\'initialisation du contrat:', err);\n          setError('Erreur lors de la connexion au contrat intelligent');\n        }\n      }\n    };\n\n    initContract();\n  }, [provider, account]);\n\n  // Gérer le changement de fichier\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Vérifier le type de fichier (PDF ou image)\n      if (selectedFile.type.startsWith('application/pdf') || \n          selectedFile.type.startsWith('image/')) {\n        setFile(selectedFile);\n        setError('');\n      } else {\n        setFile(null);\n        setError('Veuillez sélectionner un fichier PDF ou une image');\n      }\n    }\n  };\n\n  // Soumettre le formulaire pour ajouter un certificat\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Réinitialiser les messages\n    setError('');\n    setSuccess('');\n    \n    // Vérifier que tous les champs sont remplis\n    if (!studentName || !specialization || !graduationDate || !studentAddress || !file) {\n      setError('Veuillez remplir tous les champs et sélectionner un fichier');\n      return;\n    }\n    \n    // Vérifier que l'adresse Ethereum est valide\n    if (!ethers.isAddress(studentAddress)) {\n      setError('Adresse Ethereum invalide');\n      return;\n    }\n    \n    // Vérifier que l'utilisateur est administrateur\n    if (!isAdmin) {\n      setError('Vous devez être administrateur pour ajouter un certificat');\n      return;\n    }\n    \n    setIsLoading(true);\n    \n    try {\n      // Convertir la date en timestamp Unix\n      const dateTimestamp = Math.floor(new Date(graduationDate).getTime() / 1000);\n      \n      // Télécharger le fichier sur IPFS\n      const ipfsHash = await uploadToIPFS(file);\n      console.log('Fichier téléchargé sur IPFS avec le hash:', ipfsHash);\n      \n      // Ajouter le certificat au contrat\n      const tx = await contract.addCertificate(\n        studentAddress,\n        studentName,\n        specialization,\n        dateTimestamp,\n        ipfsHash\n      );\n      \n      // Attendre la confirmation de la transaction\n      await tx.wait();\n      \n      // Réinitialiser le formulaire\n      setStudentName('');\n      setSpecialization('');\n      setGraduationDate('');\n      setStudentAddress('');\n      setFile(null);\n      \n      setSuccess('Certificat ajouté avec succès !');\n    } catch (err) {\n      console.error('Erreur lors de l\\'ajout du certificat:', err);\n      setError('Erreur lors de l\\'ajout du certificat: ' + (err.message || err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Si l'utilisateur n'est pas connecté, afficher un message\n  if (!account) {\n    return (\n      <div className=\"card max-w-2xl mx-auto my-8 bg-gray-50\">\n        <div className=\"text-center py-8\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Ajouter un Certificat de Diplôme</h2>\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"w-16 h-16 bg-blue-50 rounded-full flex items-center justify-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n              </svg>\n            </div>\n          </div>\n          <p className=\"text-gray-600 mb-6\">Veuillez vous connecter avec MetaMask pour ajouter un certificat.</p>\n          <button className=\"btn btn-primary\" disabled>\n            Connectez-vous d'abord\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Si l'utilisateur n'est pas administrateur, afficher un message\n  if (account && !isAdmin) {\n    return (\n      <div className=\"card max-w-2xl mx-auto my-8 bg-gray-50\">\n        <div className=\"text-center py-8\">\n          <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Ajouter un Certificat de Diplôme</h2>\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"w-16 h-16 bg-red-50 rounded-full flex items-center justify-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-8 w-8 text-red-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n              </svg>\n            </div>\n          </div>\n          <p className=\"text-gray-600 mb-2\">Accès restreint</p>\n          <p className=\"text-gray-500 text-sm mb-6\">Seul l'administrateur peut ajouter des certificats.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"add-certificate\">\n      <h2>Ajouter un Certificat de Diplôme</h2>\n      \n      {error && <div className=\"error-message\">{error}</div>}\n      {success && <div className=\"success-message\">{success}</div>}\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"studentName\">Nom de l'étudiant:</label>\n          <input\n            type=\"text\"\n            id=\"studentName\"\n            value={studentName}\n            onChange={(e) => setStudentName(e.target.value)}\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"specialization\">Spécialité:</label>\n          <input\n            type=\"text\"\n            id=\"specialization\"\n            value={specialization}\n            onChange={(e) => setSpecialization(e.target.value)}\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"graduationDate\">Date d'obtention:</label>\n          <input\n            type=\"date\"\n            id=\"graduationDate\"\n            value={graduationDate}\n            onChange={(e) => setGraduationDate(e.target.value)}\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"studentAddress\">Adresse Ethereum de l'étudiant:</label>\n          <input\n            type=\"text\"\n            id=\"studentAddress\"\n            value={studentAddress}\n            onChange={(e) => setStudentAddress(e.target.value)}\n            placeholder=\"0x...\"\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"certificateFile\">Fichier du diplôme (PDF ou image):</label>\n          <input\n            type=\"file\"\n            id=\"certificateFile\"\n            onChange={handleFileChange}\n            accept=\".pdf,image/*\"\n            required\n          />\n        </div>\n        \n        <button type=\"submit\" disabled={isLoading} className=\"submit-button\">\n          {isLoading ? 'Traitement en cours...' : 'Ajouter le Certificat'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddCertificate;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}